apiVersion: apps/v1
kind: Deployment
metadata:
  name: middleware-server
  namespace: demo
  labels:
    app: middleware-server
spec:
  selector:
    matchLabels:
      app: middleware-server
  template:
    metadata:
      labels:
        app: middleware-server
    spec:
      serviceAccountName: middleware-server
      initContainers:
        - name: truststore-creator
          image: ghcr.io/chr-fritz/java-trust-store-builder:latest
          imagePullPolicy: Always
          volumeMounts:
            - name: truststore
              mountPath: /truststore
              readOnly: false
            - name: ca-certificates
              mountPath: /ca-certs
              readOnly: true
      containers:
        - name: middleware-server
          image: ghcr.io/chr-fritz/workload-id-middleware-server:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: k8s
            - name: SPRING_CONFIG_ADDITIONAL_LOCATION
              value: /config/
            - name: JAVA_TOOL_OPTIONS
              value: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=localhost:5005 -Djavax.net.ssl.trustStore=/truststore/truststore.jks -Djavax.net.ssl.trustStorePassword=changeit
          startupProbe:
            httpGet:
              port: http
              path: /actuator/health/readiness
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 10
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              port: http
              path: /actuator/health/readiness
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 2
            timeoutSeconds: 2
          livenessProbe:
            httpGet:
              port: http
              path: /actuator/health/liveness
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 10
            timeoutSeconds: 5
          volumeMounts:
            - name: app-config
              mountPath: /config/
            - name: truststore
              mountPath: /truststore/
            - name: workload-id-token
              mountPath: /var/run/secrets/kubernetes.io/keycloak/
      volumes:
        - name: app-config
          configMap:
            name: middleware-server
            defaultMode: 0444
            items:
              - key: application-k8s.yaml
                path: application-k8s.yaml
        - name: workload-id-token
          projected:
            sources:
              - serviceAccountToken:
                  path: workload-id
                  expirationSeconds: 600
                  audience: "http://keycloak-192-168-107-4.nip.io/auth/realms/master"
        - name: truststore
          emptyDir: { }
        - name: ca-certificates
          projected:
            sources:
              - configMap:
                  name: kube-root-ca.crt
                  items:
                    - key: ca.crt
                      path: k8s-ca.crt
#              - secret:
#                  name: keycloak-192-168-107-4.nip.io-tls
#                  items:
#                    - key: ca.crt
#                      path: keycloak-ca.crt
